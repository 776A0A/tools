#!/bin/bash

if ! command -v ffmpeg &>/dev/null; then
    echo -e "\033[31mffmpeg could not be found\033[0m"
    exit
fi

if [ $# -lt 2 ]; then
    echo "Usage: cv time_range1,time_range2,... input_file [out_dir]"
    exit
fi

IFS=',' read -ra time_ranges <<<"$1"
input_file=$2

if [ ! -f "$input_file" ]; then
    echo "Input file does not exist"
    exit
fi

if [ $# -eq 3 ]; then
    out_dir="$3"
else
    out_dir=$(dirname -- "$input_file")
fi

input_file_name=$(basename -- "$input_file")
input_file_extension="${input_file_name##*.}"
input_file_name="${input_file_name%.*}"

source /usr/local/bin/convert_time_format

for time_range in "${time_ranges[@]}"; do

    formatted_time=$(convert_time_format "${time_range}")
    echo $formatted_time
    # 将时间范围的开始和结束时间转换为所需的格式
    start_time=${formatted_time%-*}
    end_time=${formatted_time#*-}

    output_file_name="$input_file_name"__"${start_time//:/_}"-"${end_time//:/_}"."mp4"
    output_file="$out_dir/$output_file_name"

    echo "Processing $start_time to $end_time..."

    # -avoid_negative_ts 1
    # 使用转换后的时间格式进行剪切
    ffmpeg -loglevel error -ss "$start_time" -to "$end_time" -i "$input_file" -c:v libx264 -c:a aac -movflags +faststart -fflags +genpts -max_interleave_delta 0 -ignore_unknown "$output_file"

    if [ $? -eq 0 ]; then
        echo -e "\033[32mOutput file saved as $output_file\033[0m"
    else
        echo -e "\033[31mFailed!\033[0m"
    fi

done

echo -e "\033[32mAll tasks have been completed\033[0m"
