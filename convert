#!/bin/bash

# 定义函数 convert_param
convert_param() {
  # 接收参数
  param=$1

  # 将参数拆分为两部分
  IFS='-' read -ra parts <<<"$param"
  first="${parts[0]}"
  second="${parts[1]}"
  second1=$first

  # 检查 first 是否包含小数点
  if [[ $first == *.* ]]; then
    # first 包含小数点，按照小数点分割为多个部分
    IFS='.' read -ra first_parts <<<"$first"
    last_first="${first_parts[@]: -1}" # 获取最后一部分
  else
    # first 没有小数点，直接使用整个值
    last_first="$first"
  fi

  # 拼接 second 中的值到 last_first，并确保为两位形式
  new_last_first="${last_first%.*}$second"

  # 判断是否需要进位
  if ((10#$last_first < 10#$second)); then
    # 需要进位，将 first 的最后一个小数点前的数字加 1
    first_prefix=$((${second1[@]: -2} + 1))
  fi

  # 拼接结果字符串
  if [[ $first_prefix != "" ]]; then
    result="$first-$second"
  else
    result="$first-$second"
  fi

  # 输出结果
  echo "$result"
}

# 测试 convert_param 函数
test_convert_param() {
  input=$1
  expected=$2

  echo "输入: $input"
  echo "预期输出: $expected"

  result=$(convert_param "$input")

  if [ "$result" = "$expected" ]; then
    echo "测试通过: 输出=$result"
  else
    echo "测试失败: 输出=$result"
    exit
  fi

  echo
}

# 执行测试
test_convert_param "1-20" "1-20"
test_convert_param "1.10-5" "1.10-2.5"
test_convert_param "1.2-10" "1.2-1.10"
test_convert_param "1.2.3-10" "1.2.3-1.2.10"
test_convert_param "1.2.10-5" "1.3.5"

# 检查参数是否存在
if [ -z "$1" ]; then
  echo "请输入参数"
  exit 1
fi

# 提取参数并调用转换函数
param="$1"
converted_param=$(convert_param "$param")

# 输出结果
echo "转换后的格式为: $converted_param"
